openapi: 3.0.3
info:
  title: API - OTEULUGAR - Programação III 
  description: API realizada em Programação III para o consultório de psicologia OTEULUGAR
  contact:
    email: lobboo.2002@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/v1
    description: Servidor local
security:
  - bearerAuth: []
tags:
  - name: authprof
    description: Dados referentes os psicólogos
  - name: auth
    description: Dados de autenticação
  - name: marcacao
    description: Dados referentes às marcações realizadas pelos utilizadores
  - name: agenda
    description: Dados referentes à agenda dos psicólogos
  - name: cliente
    description: Dados referentes aos clientes dos psicólogos
paths:
  /registerProf:
    post:
      tags:
        - authprof
      summary: Registo de um novo psicólogo
      operationId: registerProf
      security: []  # Desativa autenticação para este endpoint
      requestBody:
        description: Dados do psicólogo
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  format: string
                morada:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
                nif:
                  type: integer
                  format: integer
                email:
                  type: string
                  format: string
                contacto:
                  type: integer
                  format: integer
                dta_nascimento:
                  type: string
                  format: string  
        required: true
      responses:
        '200':
          description: Utilizador registado com sucesso
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /loginProf:
    post:
      tags:
        - authprof
      summary: Autenticação do psicólogo
      operationId: loginProf
      security: []  # Desativa autenticação para este endpoint
      requestBody:
        description: Dados de autenticação do psicólogo
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
      responses:
        '200':
          description: Autenticação com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProf'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /refreshTokenProf:
    post:
      tags:
        - authprof
      summary: Reinicia o tempo útil do token
      operationId: refreshTokenProf
      parameters:
        - name: token
          in: header
          description: refresh token
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Renovação do token realizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  AccessToken:
                    type: string
                    format: string
        '404':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /logoutProf:
    delete:
      tags:
        - authprof
      summary: Logout do psicólogo
      operationId: logoutProf
      parameters:
        - name: token
          in: header
          description: token de acesso atual
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Logout realizado com sucesso
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /register:
    post:
      tags:
        - auth
      summary: Registo de um novo utilizador
      operationId: registerUser
      security: []  # Desativa autenticação para este endpoint
      requestBody:
        description: Dados do utilizador
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  format: string
                morada:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
                nif:
                  type: integer
                  format: integer
                email:
                  type: string
                  format: string
                contacto:
                  type: integer
                  format: integer
                dta_nascimento:
                  type: string
                  format: string  
        required: true
      responses:
        '200':
          description: Utilizador registado com sucesso
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /login:
    post:
      tags:
        - auth
      summary: Autenticação do utilizador
      operationId: loginUser
      security: []  # Desativa autenticação para este endpoint
      requestBody:
        description: Dados de autenticação do utilizador
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
      responses:
        '200':
          description: Autenticação com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /refreshToken:
    post:
      tags:
        - auth
      summary: Reinicia o tempo útil do token
      operationId: refreshTokenUser
      parameters:
        - name: token
          in: header
          description: refresh token
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Renovação do token realizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  AccessToken:
                    type: string
                    format: string
        '404':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /logout:
    delete:
      tags:
        - auth
      summary: Logout do utilizador
      operationId: logoutUser
      parameters:
        - name: token
          in: header
          description: token de acesso atual
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Logout realizado com sucesso
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /marcacoes:
    get:
      tags:
        - marcacao
      summary: Retorna todos os estudantes
      operationId: getAllMarcacoes
      responses:
        "200":
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Marcacao"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /marcacao:
    post:
      tags:
        - marcacao
      summary: Adicionar uma marcação
      description: Adiciona uma marcação no sistema
      operationId: createMarcacao
      requestBody:
        description: Criar uma marcação
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marcacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Marcacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Marcacao'
        required: true
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marcacao'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Marcacao'
        '400':
          description: Input inválido
        '201':
          description: Criado com sucesso
  /marcacao/{marcacaoId}:
    put:
      tags:
        - marcacao
      summary: Fazer update de uma marcação
      description: Fazer update dos dados de uma marcação por ID
      operationId: updateMarcacao
      requestBody:
        description: Fazer update de uma marcação
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Marcacao'
          application/xml:
            schema:
              $ref: '#/components/schemas/Marcacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Marcacao'
        required: true
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marcacao'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Marcacao'
        '400':
          description: ID inválido
        '404':
          description: Marcação não encontrada
        '422':
          description: Exceção de validação
    get:
      tags:
        - marcacao
      summary: Obter uma marcação por ID
      description: Obtém apenas uma marcação por ID
      operationId: getMarcacaoById
      parameters:
        - name: marcacaoId
          in: path
          description: ID da marcação a retornar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marcacao'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Marcacao'
        '400':
          description: ID inválido
        '404':
          description: Marcação não encontrado
    delete:
      tags:
        - marcacao
      summary: Elimina uma marcação
      description: Elimina uma marcação
      operationId: deleteMarcacao
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: marcacaoId
          in: path
          description: ID da marcação a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Valor de marcação inválido
  /clientes:
    get:
      tags:
        - cliente
      summary: Retorna todos os estudantes
      operationId: getAllClientes
      responses:
        "200":
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cliente"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /cliente:
    post:
      tags:
        - cliente
      summary: Adicionar um cliente
      description: Adiciona um cliente no sistema
      operationId: createCliente
      requestBody:
        description: Criar um cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: Input inválido
        '201':
          description: Criado com sucesso
  /cliente/{clienteId}:
    put:
      tags:
        - cliente
      summary: Fazer update de um cliente
      description: Fazer update dos dados de um cliente por ID
      operationId: updateCliente
      requestBody:
        description: Fazer update de um cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: ID inválido
        '404':
          description: Cliente não encontrado
        '422':
          description: Exceção de validação
    get:
      tags:
        - cliente
      summary: Obter cliente por ID
      description: Obtém apenas um cliente por ID
      operationId: getClienteById
      parameters:
        - name: clienteId
          in: path
          description: ID do cliente a retornar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: ID inválido
        '404':
          description: Cliente não encontrado
    delete:
      tags:
        - cliente
      summary: Elimina um cliente
      description: Elimina um cliente
      operationId: deleteCliente
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: clienteId
          in: path
          description: ID do cliente a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Valor de cliente inválido
  /agendas:
    get:
      tags:
        - agenda
      summary: Retorna todos os estudantes
      operationId: getAllAgendas
      responses:
        "200":
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Agenda"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /agenda:
    post:
      tags:
        - agenda
      summary: Adicionar valores na agenda
      description: Adiciona valores na agenda
      operationId: createAgenda
      requestBody:
        description: Criar um cliente na agenda
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agenda'
          application/xml:
            schema:
              $ref: '#/components/schemas/Agenda'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Agenda'
        required: true
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Agenda'
        '400':
          description: Input inválido
        '201':
          description: Criado com sucesso
  /agenda/{agendaId}:
    put:
      tags:
        - agenda
      summary: Fazer update de um valor na agenda
      description: Fazer update da agenda por ID
      operationId: updateAgenda
      requestBody:
        description: Fazer update da agenda
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agenda'
          application/xml:
            schema:
              $ref: '#/components/schemas/Agenda'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Agenda'
        required: true
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Agenda'
        '400':
          description: ID inválido
        '404':
          description: Agenda não encontrada
        '422':
          description: Exceção de validação
    get:
      tags:
        - agenda
      summary: Obter agenda por ID
      description: Obtém apenas uma agenda por ID
      operationId: getAgendaById
      parameters:
        - name: agendaId
          in: path
          description: ID da agenda a retornar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso!!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agenda'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Agenda'
        '400':
          description: ID inválido
        '404':
          description: Agenda não encontrada
    delete:
      tags:
        - agenda
      summary: Elimina uma agenda
      description: Elimina uma agenda
      operationId: deleteAgenda
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: agendaId
          in: path
          description: ID da agenda a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Valor de agenda inválido
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthProf:
      type: object
      properties:
        AccessToken:
          type: string
          description: Token JWT de acesso
          example: eyJhbGciOiJIUzI1NiIsInR...
        RefreshToken:
          type: string
          description: Token de atualização para renovar o acesso
          example: dGhpcyByZWZyZXNoIHRva2Vu
    Auth:
      type: object
      properties:
        AccessToken:
          type: string
          description: Token JWT de acesso
          example: eyJhbGciOiJIUzI1NiIsInR...
        RefreshToken:
          type: string
          description: Token de atualização para renovar o acesso
          example: dGhpcyByZWZyZXNoIHRva2Vu
    Marcacao:
      required:
        - nome_cliente
        - tipo_consulta
        - presencial_online
        - profissional
        - horario
        - id
        - utilizador_id
        - psicologo_id
      type: object
      properties:
        nome_cliente:
          type: string
          description: Nome do cliente que quer realizar a marcação
          example: Roberto Mendes
        tipo_consulta:
          type: string
          description: Tipo de consulta pretendida
          example: EMDR
        presencial_online:
          type: string
          description: Consulta realizada presencialmente ou online
          example: Presencial
        profissional:
          type: string
          description: Profissional pretendido
          example: Liliana Marques
        horario:
          type: integer
          description: Horário da consulta
        id:
          type: integer
          description: Id da entidade
          example: 3
        utilizador_id:
          type: integer
          description: Id do utilizador
          example: 5
        psicologo_id:
          type: string
          description: Id do psicólogo
          example: 7
        data_registo:
          type: string
          format: date-time
          description: Data de registo da marcação
        data_atualizacao:
          type: string
          format: date-time
          description: Data de atualização da marcação
        observacoes:
          type: string
          description: Observações que o utilizador queira deixar
      xml:
        name: Marcação
    Cliente:
      required:
        - nome
        - tipo_consulta
        - formato_consulta
        - horario
        - id
        - notas
      type: object
      properties:
        nome:
          type: string
          description: Nome do cliente
          example: Pedro Pais
        tipo_consulta:
          type: string
          description: Tipo de consulta que o cliente pretende
          example: Casal
        formato_consulta:
          type: string
          description: Consulta realizada presencialmente ou online
          example: Online
        horario:
          type: integer
          description: Horário que o cliente pretende
        notas:
          type: string
          description: Notas deixadas pelo psicólogo referentes ao cliente
        id:
          type: integer
          description: Id da entidade cliente
          example: 2
        data_registo:
          type: string
          format: date-time
          description: Data de registo do cliente
        data_atualizacao:
          type: string
          format: date-time
          description: Data de atualização do cliente
      xml:
        name: Cliente
    Agenda:
      required:
        - nome
        - tipo_consulta
        - formato_consulta
        - horario
        - cliente_id
        - id
      type: object
      properties:
        nome:
          type: string
          description: Nome referente a um cliente para apontar na agenda
          example: Mariana Paiva
        tipo_consulta:
          type: string
          description: Tipo de consulta referente a um cliente para apontar na agenda
          example: Casal
        formato_consulta:
          type: string
          description: Consulta realizada presencialmente ou online
          example: Presencial
        horario:
          type: integer
          description: Horário referente a um cliente para apontar na agenda
        cliente_id:
          type: integer
          description: Id referente à entidade cliente
          example: 3
        id:
          type: integer
          description: Id referente à entidade agenda
          example: 3
        data_registo:
          type: string
          format: date-time
          description: Data de registo
        data_atualizacao:
          type: string
          format: date-time
          description: Data de atualização
      xml:
        name: Agenda
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      example:
        message: Recurso não encontrado
        code: 404